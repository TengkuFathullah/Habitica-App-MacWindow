{"version":3,"sources":["preload.js"],"names":["INJECT_JS_PATH","join","__dirname","setNotificationCallback","title","opt","send","document","addEventListener","window","event","preventDefault","targetElement","srcElement","href","parentElement","targetHref","once","clickSelector","target","injectScripts","on","message","appArgs","JSON","parse","console","log","setZoomFactor","callback","OldNotify","Notification","newNotify","requestPermission","bind","Object","defineProperty","get","permission","element","mouseEvent","MouseEvent","dispatchEvent","needToInject","existsSync","require"],"mappings":";;AAGA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,kBAA/B,CAAvB,C,CAPA;;;;;AASAC,wBAAwB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACpC,0BAAYC,IAAZ,CAAiB,cAAjB,EAAiCF,KAAjC,EAAwCC,GAAxC;AACH,CAFD;;AAIAE,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD;;AAEAC,WAAOD,gBAAP,CAAwB,aAAxB,EAAuC,iBAAS;AAC5CE,cAAMC,cAAN;AACA,YAAIC,gBAAgBF,MAAMG,UAA1B;;AAEA;AACA;AACA,eAAO,CAACD,cAAcE,IAAf,IAAuBF,cAAcG,aAA5C,EAA2D;AACvDH,4BAAgBA,cAAcG,aAA9B;AACH;AACD,YAAMC,aAAaJ,cAAcE,IAAjC;;AAEA,YAAI,CAACE,UAAL,EAAiB;AACb,kCAAYC,IAAZ,CAAiB,mBAAjB,EAAsC,YAAM;AACxCC,8BAAcR,MAAMS,MAApB;AACA,sCAAYb,IAAZ,CAAiB,yBAAjB;AACH,aAHD;AAIH;;AAED,8BAAYA,IAAZ,CAAiB,mBAAjB,EAAsCU,UAAtC;AACH,KAnBD,EAmBG,KAnBH;;AAqBAI;AACH,CAzBD;;AA2BA,sBAAYC,EAAZ,CAAe,QAAf,EAAyB,UAACX,KAAD,EAAQY,OAAR,EAAoB;AACzC,QAAMC,UAAUC,KAAKC,KAAL,CAAWH,OAAX,CAAhB;AACAI,YAAQC,GAAR,CAAY,iBAAZ,EAA+BJ,OAA/B;AACH,CAHD;;AAKA,sBAAYF,EAAZ,CAAe,OAAf,EAAwB,UAACX,KAAD,EAAQY,OAAR,EAAoB;AACxCI,YAAQC,GAAR,CAAY,QAAZ,EAAsBL,OAAtB;AACH,CAFD;;AAIA,sBAAYD,EAAZ,CAAe,aAAf,EAA8B,UAACX,KAAD,EAAQY,OAAR,EAAoB;AAC9C,uBAASM,aAAT,CAAuBN,OAAvB;AACH,CAFD;;AAIA;;;;AAIA,SAASnB,uBAAT,CAAiC0B,QAAjC,EAA2C;;AAEvC,QAAMC,YAAYrB,OAAOsB,YAAzB;AACA,QAAMC,YAAY,SAAZA,SAAY,CAAC5B,KAAD,EAAQC,GAAR,EAAgB;AAC9BwB,iBAASzB,KAAT,EAAgBC,GAAhB;AACA,eAAO,IAAIyB,SAAJ,CAAc1B,KAAd,EAAqBC,GAArB,CAAP;AACH,KAHD;AAIA2B,cAAUC,iBAAV,GAA8BH,UAAUG,iBAAV,CAA4BC,IAA5B,CAAiCJ,SAAjC,CAA9B;AACAK,WAAOC,cAAP,CAAsBJ,SAAtB,EAAiC,YAAjC,EAA+C;AAC3CK,aAAK,eAAM;AACP,mBAAOP,UAAUQ,UAAjB;AACH;AAH0C,KAA/C;;AAMA7B,WAAOsB,YAAP,GAAsBC,SAAtB;AACH;;AAED,SAASd,aAAT,CAAuBqB,OAAvB,EAAgC;AAC5B,QAAMC,aAAa,IAAIC,UAAJ,CAAe,OAAf,CAAnB;AACAF,YAAQG,aAAR,CAAsBF,UAAtB;AACH;;AAED,SAASpB,aAAT,GAAyB;AACrB,QAAMuB,eAAe,aAAGC,UAAH,CAAc5C,cAAd,CAArB;AACA,QAAI,CAAC2C,YAAL,EAAmB;AACf;AACH;AACDE,YAAQ7C,cAAR;AACH","file":"preload.js","sourcesContent":["/**\n Preload file that will be executed in the renderer process\n */\nimport {ipcRenderer, webFrame} from 'electron';\nimport path from 'path';\nimport fs from 'fs';\n\nconst INJECT_JS_PATH = path.join(__dirname, '../../', 'inject/inject.js');\n\nsetNotificationCallback((title, opt) => {\n    ipcRenderer.send('notification', title, opt);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // do things\n\n    window.addEventListener('contextmenu', event => {\n        event.preventDefault();\n        let targetElement = event.srcElement;\n\n        // the clicked element is the deepest in the DOM, and may not be the <a> bearing the href\n        // for example, <a href=\"...\"><span>Google</span></a>\n        while (!targetElement.href && targetElement.parentElement) {\n            targetElement = targetElement.parentElement;\n        }\n        const targetHref = targetElement.href;\n\n        if (!targetHref) {\n            ipcRenderer.once('contextMenuClosed', () => {\n                clickSelector(event.target);\n                ipcRenderer.send('cancelNewWindowOverride');\n            });\n        }\n\n        ipcRenderer.send('contextMenuOpened', targetHref);\n    }, false);\n\n    injectScripts();\n});\n\nipcRenderer.on('params', (event, message) => {\n    const appArgs = JSON.parse(message);\n    console.log('nativefier.json', appArgs);\n});\n\nipcRenderer.on('debug', (event, message) => {\n    console.log('debug:', message);\n});\n\nipcRenderer.on('change-zoom', (event, message) => {\n    webFrame.setZoomFactor(message);\n});\n\n/**\n * Patches window.Notification to set a callback on a new Notification\n * @param callback\n */\nfunction setNotificationCallback(callback) {\n\n    const OldNotify = window.Notification;\n    const newNotify = (title, opt) => {\n        callback(title, opt);\n        return new OldNotify(title, opt);\n    };\n    newNotify.requestPermission = OldNotify.requestPermission.bind(OldNotify);\n    Object.defineProperty(newNotify, 'permission', {\n        get: () => {\n            return OldNotify.permission;\n        }\n    });\n\n    window.Notification = newNotify;\n}\n\nfunction clickSelector(element) {\n    const mouseEvent = new MouseEvent('click');\n    element.dispatchEvent(mouseEvent);\n}\n\nfunction injectScripts() {\n    const needToInject = fs.existsSync(INJECT_JS_PATH);\n    if (!needToInject) {\n        return;\n    }\n    require(INJECT_JS_PATH);\n}\n"]}